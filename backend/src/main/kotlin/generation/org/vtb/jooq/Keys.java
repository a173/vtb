/*
 * This file is generated by jOOQ.
 */
package org.vtb.jooq;


import org.jooq.ForeignKey;
import org.jooq.Record;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.vtb.jooq.tables.Atm;
import org.vtb.jooq.tables.AtmService;
import org.vtb.jooq.tables.FlywaySchemaHistory;
import org.vtb.jooq.tables.Office;
import org.vtb.jooq.tables.Registration;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<Record> ATM_PKEY = Internal.createUniqueKey(Atm.ATM, DSL.name("atm_pkey"), new TableField[] { Atm.ATM.ID }, true);
    public static final UniqueKey<Record> ATM_SERVICE_ATM_ID_KEY = Internal.createUniqueKey(AtmService.ATM_SERVICE, DSL.name("atm_service_atm_id_key"), new TableField[] { AtmService.ATM_SERVICE.ATM_ID }, true);
    public static final UniqueKey<Record> ATM_SERVICE_PKEY = Internal.createUniqueKey(AtmService.ATM_SERVICE, DSL.name("atm_service_pkey"), new TableField[] { AtmService.ATM_SERVICE.ID }, true);
    public static final UniqueKey<Record> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<Record> OFFICE_PKEY = Internal.createUniqueKey(Office.OFFICE, DSL.name("office_pkey"), new TableField[] { Office.OFFICE.ID }, true);
    public static final UniqueKey<Record> REGISTRATION_PKEY = Internal.createUniqueKey(Registration.REGISTRATION, DSL.name("registration_pkey"), new TableField[] { Registration.REGISTRATION.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<Record, Record> ATM_SERVICE__ATM_SERVICE_ATM_ID_FKEY = Internal.createForeignKey(AtmService.ATM_SERVICE, DSL.name("atm_service_atm_id_fkey"), new TableField[] { AtmService.ATM_SERVICE.ATM_ID }, Keys.ATM_PKEY, new TableField[] { Atm.ATM.ID }, true);
    public static final ForeignKey<Record, Record> REGISTRATION__REGISTRATION_OFFICE_ID_FKEY = Internal.createForeignKey(Registration.REGISTRATION, DSL.name("registration_office_id_fkey"), new TableField[] { Registration.REGISTRATION.OFFICE_ID }, Keys.OFFICE_PKEY, new TableField[] { Office.OFFICE.ID }, true);
}
